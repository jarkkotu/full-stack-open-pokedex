name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run eslint
      - name: Build application
        run: npm run build
      - name: Run tests
        run: npm test
      - name: Run e2e tests
        uses: cypress-io/github-action@v5
        with:
          command: npm run test:e2e
          start: npm run start-prod
          wait-on: http://localhost:5000

  tag_release:
    runs-on: ubuntu-latest
    needs: [simple_deployment_pipeline]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(join(github.event.commits.*.message), '#skip') }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: "0"
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: "patch"
          TAG_PREFIX: v

  fly_deploy:
    runs-on: ubuntu-latest
    needs: [simple_deployment_pipeline, tag_release]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(join(github.event.commits.*.message), '#skip')}}
    concurrency: deploy-group # optional: ensure only one action runs at a time
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  discord_success_notification:
    runs-on: ubuntu-latest
    needs: [fly_deploy]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(join(github.event.commits.*.message), '#skip') && success() }}
    steps:
      - uses: actions/checkout@v4
      - name: Send Discord success notification
        uses: rjstone/discord-webhook-notify@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          username: "Github"
          severity: "info"
          details: |
            "Pokedex $GITHUB_REF_NAME deployed."

  discord_failure_notification:
    runs-on: ubuntu-latest
    needs: [simple_deployment_pipeline, tag_release, fly_deploy]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(join(github.event.commits.*.message), '#skip') && failure() }}
    steps:
      - uses: actions/checkout@v4
      - name: Send Discord failure notification
        uses: rjstone/discord-webhook-notify@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          username: "Github"
          severity: "error"
          details: |
            "Pokedex deployment pipeline failed.
            Commit SHA: ${{ github.sha }}.
            Please check the logs for more details."
